.tab {
  user-select: none; 
  position: relative;
  display: flex;
  align-items: stretch;
  height: var(--block-height);
  // background: var(--color-three);
  background: var(--color-two);
  color: var(--color-three);
  // margin: 0 0 var(--lesser-padding) 0;
  margin: 0 0 var(--lesser-padding) 0;
  padding: var(--greater-padding);
  border-radius: var(--lesser-padding);
  // width: 100%;
  --duplicate-indicator-color: none;
  // --y-pos: null;
  --y-offset: 0;
  --delay: 0;
  --trans-delay: 0ms;
  --opacity-delay: 0ms;
  --trans-duration: 0ms;
  --opacity-duration: 0ms;
  // --speed: 0ms;
  // --offset-speed: 0;
  // --active-indicator-space: calc(var(--greater-padding) + var(--lesser-padding));
  --opacity: 1;
  // --scale: 1;
  --scale: 0.99;
  // transform: translateY(0);
  // transform: translateY(var(--y-offset));
  // transition: background-color 1400ms ease-in-out, transform 6000ms ease-in-out, opacity 1400ms ease-out;
  // transition: background-color 1400ms ease-in-out, transform 0ms, opacity 1400ms ease-out;
  visibility: visible;
  // transition: opacity 1000ms ease-in, visibility 0ms 1000ms;
  // transition: none;
  touch-action: none;
  // overflow: hidden;
  box-shadow: 0 0 0 2px var(--color-one);

  // &:last-child {
  //   margin-bottom: 0;
  // }
  
  &:hover {
    // background: #D4D4D4;
    background: var(--color-two-hover);
    // transition: background-color 140ms ease-in-out, opacity 140ms ease-out;
    transition: background-color 100ms ease-in-out, transform 60ms ease-out, opacity 140ms ease-in-out, box-shadow 100ms ease-in-out;
  }

  /* when tab gets hidden:
  - its opacity should start decreasing without delay, regardless of tabs above
  - if any tab above is unhidden, hidden tab will need to move immediately, before it reaches opacity 0. In this case its trans-delay should be set to 0 and trans-duration should be set to 160ms.
  - otherwise, whether tabs above are also hidden or unaffected, it should have trans-delay set to 160ms and trans-duration to 0ms 
  */
  &--filtered-out {
    // background: green;
    visibility: hidden;
    opacity: 0;
    transition: opacity var(--opacity-duration) var(--opacity-delay) ease-in-out, transform var(--trans-duration) var(--trans-delay) ease-in-out, visibility var(--opacity-duration) var(--opacity-delay);
    transform: translateY(var(--y-offset));

    &:hover {
      transition: opacity var(--opacity-duration) var(--opacity-delay) ease-in-out, transform var(--trans-duration) var(--trans-delay) ease-in-out, visibility var(--opacity-duration) var(--opacity-delay);
    }
  }

  /* when tab gets unhidden:
  - it should move into proper place without delay and with speed 0, so transform should have speed 0 and delay 0
  - its opacity increase should be delayed ONLY IF some tabs below are visible Otherwise, no opacity-delay needed.
  */
  /* when tab is already visible:
  - it should move into place with speed 1000ms and with delay ONLY if filteredOutTabs > 0, so transform should have speed 1000ms and delay 1000ms
  - its opacity should start increasing with delay ONLY IF some tabs above are getting unhidden
  */
  &--filtered {
    // background: purple;
    opacity: 1;
    transform: translateY(var(--y-offset));
    transition: transform var(--trans-duration) var(--trans-delay) ease-in-out, opacity var(--opacity-duration) var(--opacity-delay) ease-in-out;

    &:hover {
      transition: transform var(--trans-duration) var(--trans-delay) ease-in-out, opacity var(--opacity-duration) var(--opacity-delay) ease-in-out;
    }

  }

  &--held-down {
    transform: translateY(var(--y-offset)) scale(0.99);
    transition: background-color 1400ms ease-in-out, transform 60ms ease-in-out, opacity 1400ms ease-out;
  }

  &--active {

    overflow:visible;

    &::before {
      content: "";
      width: 2rem;
      position: absolute;
      right: calc(100% + 3px);
      border-radius: 0 var(--lesser-padding) var(--lesser-padding) 0;
      top: 0;
      height: 100%;
      // background: orange;
      background: lime;
    }

  }

  &__tab-button {
    z-index: 1;
    // top: 2px;
    top: 0;
    // left: 2px;
    left: 0;
    position: absolute;
    // width: calc(100% - 4px);
    width: 100%;
    // height: calc(100% - 4px);
    height: 100%;
    border-radius: var(--lesser-padding);
    background: transparent;
    // opacity: 0.1;
    touch-action: none;
    transition: box-shadow 100ms ease-in-out;

    &:focus {
      transition: box-shadow 100ms ease-in-out;
    }
  }

  &__checkbox-label {
    // background: green;
    position: relative;
    z-index: 1;
    width: 1rem;
    height: 1rem;
    margin-right: var(--greater-padding);

    // &--checked {
    //   & path {
    //     stroke: red;
    //   }
    // }

    // &::before {
    //   content: "";
    //   position: absolute;
    //   width: 140%;
    //   height: 140%;
    //   top: -0.2rem;
    //   left: -0.2rem;
    //   border-radius: var(--lesser-padding);
    //   z-index: -1;
    //   pointer-events: none;
    //   transition: background-color 120ms ease-in-out;
    // }

    // &:focus {
    //   box-shadow: none;

    //   &::before {
    //     box-shadow: inset 0 0 0 2px lime;
    //     transition: box-shadow 120ms ease-in-out;
    //   }
      
    // }

  }

  &__checkbox {
    position: absolute;
    width: 1rem;
    height: 1rem;
    opacity: 0;

    &:focus + svg {
      box-shadow: inset 0 0 0 2px lime;
    }

    &:checked + svg .tab__svg-checkbox-box {
      // fill: var(--color-two);
      fill: var(--color-four);
    }

    &:checked + svg .tab__svg-checkbox-checkmark {
      stroke: var(--color-two);
    }
  }

  &__svg-checkbox {
    position: absolute;
    pointer-events: none;
    border-radius: var(--lesser-padding);
    top: -0.2rem;
    left: -0.2rem;
    transition: box-shadow 20ms ease-in-out;

    &-box {
      fill: transparent;
      transition: fill 20ms ease-in-out;
    }

    &-checkmark {
      stroke: transparent;
      transition: stroke 20ms ease-in-out;
    }
  }

  &__favicon {
    border: none;
    width: 20px;
    height: 20px;
    margin-right: var(--greater-padding);
  }

  &__title {
    position: relative;
    margin: 0 var(--greater-padding) 0 0;
    flex: 1 0 0;
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
  }

  &__delete-button {
    position: relative;
    z-index: 1;
    width: 1rem;
    height: 1rem;
    border-radius: var(--lesser-padding);
    background: transparent;

    &::before {
      content: "";
      position: absolute;
      width: 140%;
      height: 140%;
      top: -0.2rem;
      left: -0.2rem;
      border-radius: var(--lesser-padding);
      z-index: -1;
      pointer-events: none;
      transition: background-color 120ms ease-in-out;
    }

    &:focus {
      box-shadow: none;

      &::before {
        box-shadow: inset 0 0 0 2px lime;
        transition: box-shadow 120ms ease-in-out;
      }
      
    }

    &:hover {
      &::before {
        background: var(--color-two);
      }
    }

    & img {
      pointer-events: none;
    }
  }

  &--draggable {
    cursor: grabbing;
    transform: translateY(var(--y-offset)) scale(1.01);
    transition: none;
    box-shadow: none;

    &:hover {
      transition: none;
      background: var(--color-two-hover);
    }

    & .tab__tab-button {
      cursor: grabbing;
    }

  }

  &--scroll-drag {
    // z-index: 1000;
    cursor: grabbing;
    transform: translateY(var(--y-offset)) scale(1.01);
    // transition: transform 30ms ease-in-out;
    transition: transform var(--scroll-drag-speed) ease-in-out;
    // transition: transform 8000ms ease-in-out;

    &:hover {
      // transition: transform 30ms ease-in-out;
      transition: transform var(--scroll-drag-speed) ease-in-out;
      background: white;
    }

    & .tab__tab-button {
      cursor: grabbing;
    }

    // & ~ li {
    //   transform: translateY(calc(100% + var(--lesser-padding)));
    //   transition: none;
    // }
  }

  // &--moveable {
  //   transform: scale(0.99);
  //   transition: transform 140ms ease-in-out, opacity 140ms ease-in-out;
  //   z-index: -1000;
  // }

  &--moving { 
    opacity: var(--opacity);
    background: var(--color-two-hover);
    transform: translateY(var(--y-offset)) scale(var(--scale));
    transition: transform 140ms ease-in-out, opacity 140ms ease-in-out;
    z-index: -1000;
  }

  &__duplicate-indicator {
    margin-right: var(--greater-padding);
  }

  &--duplicate {
    // stroke: var(--color-three);
    stroke: var(--color-four);
  }

  &--deleted {
    opacity: 0;
    // margin-bottom: calc(var(--block-height) * -1);
    transition: opacity 1400ms ease-out;

    & + li {
      margin-top: calc(var(--block-height) * -1);
      transition: none;
    }

    & ~ li {
      transform: translateY(var(--block-height));
      // transform: translateY(calc(var(--block-height) + var(--greater-padding)));
      transition: none;

      // &:first-of-type {
      //   margin-top: var(--block-height);
      //   background: red;
      // }

      // &:last-of-type {
      //   margin-bottom: var(--block-height);
      //   background: red;
      // }
    }
  }
}


@keyframes filteredIn {

  0% {
    transform: translateY(var(--y-offset));
  }

  100% {
    transform: translateY(0);
  }

}

@keyframes float {

  0% {
    transform: translateY(0);
  }

  30% {
    transform: translateY(var(--float-y-from));
  }
  
  80% {
    transform: translateY(var(--float-y-to));
  }
  
  100% {
    transform: translateY(0);
  }

}
